# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services.   # noqa: E501

    The version of the OpenAPI document: 1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.node_body_create import NodeBodyCreate  # noqa: E501
from openapi_client.rest import ApiException

class TestNodeBodyCreate(unittest.TestCase):
    """NodeBodyCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test NodeBodyCreate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.node_body_create.NodeBodyCreate()  # noqa: E501
        if include_optional :
            return NodeBodyCreate(
                name = 'a', 
                node_type = '0', 
                aspect_names = [
                    '0'
                    ], 
                properties = None, 
                permissions = openapi_client.models.permissions_body.PermissionsBody(
                    is_inheritance_enabled = True, 
                    locally_set = [
                        openapi_client.models.permission_element.PermissionElement(
                            authority_id = '0', 
                            name = '0', 
                            access_status = 'ALLOWED', )
                        ], ), 
                relative_path = '0', 
                association = openapi_client.models.node_body_create_association.NodeBodyCreate_association(
                    assoc_type = '0', ), 
                secondary_children = [
                    openapi_client.models.child_association_body.ChildAssociationBody(
                        child_id = '0', 
                        assoc_type = '0', )
                    ], 
                targets = [
                    openapi_client.models.association_body.AssociationBody(
                        target_id = '0', 
                        assoc_type = '0', )
                    ]
            )
        else :
            return NodeBodyCreate(
                name = 'a',
                node_type = '0',
        )

    def testNodeBodyCreate(self):
        """Test NodeBodyCreate"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
